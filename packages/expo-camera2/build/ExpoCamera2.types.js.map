{"version":3,"file":"ExpoCamera2.types.js","sourceRoot":"","sources":["../src/ExpoCamera2.types.ts"],"names":[],"mappings":"AAuIA;;GAEG;AACH,MAAM,CAAN,IAAY,YA0BX;AA1BD,WAAY,YAAY;IACtB;;OAEG;IACH,kCAAkB,CAAA;IAElB;;OAEG;IACH,kCAAkB,CAAA;IAElB;;OAEG;IACH,gCAAgB,CAAA;IAEhB;;OAEG;IACH,gCAAgB,CAAA;IAEhB;;;OAGG;IACH,8BAAc,CAAA;AAChB,CAAC,EA1BW,YAAY,KAAZ,YAAY,QA0BvB;AAED;;GAEG;AACH,MAAM,CAAN,IAAY,MAUX;AAVD,WAAY,MAAM;IAChB;;OAEG;IACH,yBAAe,CAAA;IAEf;;OAEG;IACH,uBAAa,CAAA;AACf,CAAC,EAVW,MAAM,KAAN,MAAM,QAUjB;AAED;;GAEG;AACH,MAAM,CAAN,IAAY,SAoBX;AApBD,WAAY,SAAS;IACnB;;OAEG;IACH,sBAAS,CAAA;IAET;;OAEG;IACH,wBAAW,CAAA;IAEX;;OAEG;IACH,0BAAa,CAAA;IAEb;;OAEG;IACH,4BAAe,CAAA;AACjB,CAAC,EApBW,SAAS,KAAT,SAAS,QAoBpB;AAED;;GAEG;AACH,MAAM,CAAN,IAAY,SAYX;AAZD,WAAY,SAAS;IACnB;;OAEG;IACH,sBAAS,CAAA;IAET;;;;OAIG;IACH,wBAAW,CAAA;AACb,CAAC,EAZW,SAAS,KAAT,SAAS,QAYpB;AAED;;;GAGG;AACH,MAAM,CAAN,IAAY,YA8BX;AA9BD,WAAY,YAAY;IACtB;;OAEG;IACH,6BAAa,CAAA;IAEb;;OAEG;IACH,+BAAe,CAAA;IAEf;;OAEG;IACH,iCAAiB,CAAA;IAEjB;;OAEG;IACH,iCAAiB,CAAA;IAEjB;;OAEG;IACH,yCAAyB,CAAA;IAEzB;;OAEG;IACH,6CAA6B,CAAA;AAC/B,CAAC,EA9BW,YAAY,KAAZ,YAAY,QA8BvB;AAED,MAAM,CAAN,IAAY,GAUX;AAVD,WAAY,GAAG;IACb;;OAEG;IACH,gBAAS,CAAA;IAET;;OAEG;IACH,kBAAW,CAAA;AACb,CAAC,EAVW,GAAG,KAAH,GAAG,QAUd","sourcesContent":["/**\n * Options for video recording using camera.\n */\nexport interface VideoRecordingOptions {\n  /**\n   * If the chosen quality is not available for a device, the highest available is chosen.\n   */\n  quality?: VideoQuality;\n\n  /**\n   * Maximum duration in seconds.\n   * No value means no limit.\n   */\n  maxDuration?: number;\n\n  /**\n   * Maximum video file size in bytes.\n   * No value means no limit.\n   */\n  maxFileSize?: number;\n\n  /**\n   * If enabled, video will be recorded with no sound.\n   * @default false\n   */\n  mute?: boolean;\n}\n\n/**\n * Recorded video.\n */\nexport interface Video {\n  /**\n   * File uri with recorded video.\n   */\n  uri: string;\n}\n\n/**\n * Options for taking picture with camera.\n */\nexport interface TakingPictureOptions {\n  /**\n   * Quality of compression.\n   * Value between `0.0` and `1.0`.\n   * `0.0` - maximum compression (minimum quality and size).\n   * `1.0` - no compression (maximum quality).\n   * @default 1.0\n   */\n  quality?: number;\n\n  /**\n   * Flag idicating whether to also include the image data in Base64 format.\n   * @default false\n   */\n  base64?: boolean;\n\n  /**\n   * Flag idicating whether to also include the EXIF data for the image.\n   * @default false\n   */\n  exif?: boolean;\n\n  /**\n   * If set to `true` camera component skips orientation adjustment and returns an image straight from the device's camera.\n   * Moreover `quality` option is discarded (processing pipeline is skipped as a whole).\n   * Although enabling this option reduces image delivery time significantly,\n   * it may cause the image to appear in a wrong orientation in the Image component\n   * (at the time of writing, it does not respect EXIF orientation of the images).\n   *\n   * > Enabling **skipProcessing** would cause orientation uncertainty.\n   * > Image component does not respect EXIF stored orientation information, that means obtained image would be displayed wrongly (rotated by 90°, 180° or 270°).\n   * > Different devices provide different orientations.\n   * > For example some Sony Xperia or Samsung devices don't provide correctly oriented images by default.\n   * > To always obtain correctly oriented image disable **skipProcessing** option.\n   *\n   * @default false\n   * @Android only\n   */\n  skipProcessing?: boolean;\n}\n\n/**\n * Taken picture.\n */\nexport interface Picture {\n  /**\n   * Width of the picture.\n   */\n  width: number;\n\n  /**\n   * Height of the picture.\n   */\n  height: number;\n\n  /**\n   * URI to the local image file (useable as the source for an **Image** element).\n   *\n   * > The local image URI is temporary.\n   * > Use **Expo.FileSystem.copyAsync** to make a permanent copy of the image.\n   */\n  uri: string;\n\n  /**\n   * String containing the JPEG data of the image in Base64.\n   * Available when **base64** option was enabled in **takePictureAsync** method.\n   *\n   * > Prepend that with `data:image/jpg;base64,` to get a data URI,\n   * > which you can use as the source for an **Image** element for example.\n   */\n  base64?: string;\n\n  /**\n   * Object containing EXIF data for the image.\n   * The **keys** of its properties are EXIF tags and their **values** are the values for those tags.\n   * Available when **exif** option was enabled in **takePictureAsync** method.\n   */\n  exif?: { [key: string]: any };\n}\n\n/**\n *\n */\nexport interface FocusPoint {\n  x: number;\n  y: number;\n}\n\nexport interface MountError {\n  nativeEvent: {\n    message: string;\n  };\n}\n\n/**\n * Quality of recorded video.\n */\nexport enum VideoQuality {\n  /**\n   * `2160p`\n   */\n  VQ_2160p = '2160p',\n\n  /**\n   * `1080p`\n   */\n  VQ_1080p = '1080p',\n\n  /**\n   * `720p`\n   */\n  VQ_720p = '720p',\n\n  /**\n   * `480p`\n   */\n  VQ_480p = '480p',\n\n  /**\n   * `4:3` resulting in video of size `640x480`.\n   * @Android only\n   */\n  VQ_4x3 = '4x3',\n}\n\n/**\n * Camera facing mapped into camera sensor being used.\n */\nexport enum Facing {\n  /**\n   * Front-facing camera sensor.\n   */\n  Front = 'front',\n\n  /**\n   * Back-facing camera sensor.\n   */\n  Back = 'back',\n}\n\n/**\n * Camera flash mode.\n */\nexport enum FlashMode {\n  /**\n   * Device would flash during taking picture.\n   */\n  On = 'on',\n\n  /**\n   * No flash.\n   */\n  Off = 'off',\n\n  /**\n   * Flash would be fired automatically if required.\n   */\n  Auto = 'auto',\n\n  /**\n   * Constantly turned on flash.\n   */\n  Torch = 'torch',\n}\n\n/**\n * State of camera autofocus.\n */\nexport enum Autofocus {\n  /**\n   * Autofocus enabled.\n   */\n  On = 'on',\n\n  /**\n   * Autofocus disabled.\n   * Focus would lock as it was in the moment of change,\n   * but it can be adjusted on some devices via `focusDepth` prop.\n   */\n  Off = 'off',\n}\n\n/**\n * Camera white balance.\n * If a device does not support any of these values previous one is used.\n */\nexport enum WhiteBalance {\n  /**\n   *\n   */\n  Auto = 'auto',\n\n  /**\n   *\n   */\n  Sunny = 'sunny',\n\n  /**\n   *\n   */\n  Cloudy = 'cloudy',\n\n  /**\n   *\n   */\n  Shadow = 'shadow',\n\n  /**\n   *\n   */\n  Flurescent = 'flurescent',\n\n  /**\n   *\n   */\n  Incandescnet = 'incandescnet',\n}\n\nexport enum HDR {\n  /**\n   *\n   */\n  On = 'on',\n\n  /**\n   *\n   */\n  Off = 'off',\n}\n"]}