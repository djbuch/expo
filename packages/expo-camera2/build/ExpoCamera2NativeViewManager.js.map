{"version":3,"file":"ExpoCamera2NativeViewManager.js","sourceRoot":"","sources":["../src/ExpoCamera2NativeViewManager.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AAYtD,MAAM,4BAA4B,GAiB9B,kBAAkB,CAAC,sBAA6B,CAAC;AAErD,eAAe,4BAA4B,CAAC","sourcesContent":["import { NativeModulesProxy } from '@unimodules/core';\n\nimport {\n  FocusPoint,\n  Picture,\n  TakingPictureOptions,\n  Video,\n  VideoRecordingOptions,\n} from './ExpoCamera2.types';\n\ntype NodeHandle = number | undefined\n\nconst ExpoCamera2NativeViewManager: {\n  // Lifecycles\n  pausePreviewAsync: (cameraViewNodeHandle: NodeHandle) => Promise<void>;\n  resumePreviewAsync: (cameraViewNodeHandle: NodeHandle) => Promise<void>;\n\n  // Actions\n  focusOnPoint: (previewFocusPoint: FocusPoint, cameraViewNodeHandle: NodeHandle) => Promise<boolean>;\n  recordAsync: (options: VideoRecordingOptions, cameraViewNodeHandle: NodeHandle) => Promise<Video>;\n  takePictureAsync: (options: TakingPictureOptions, cameraViewNodeHandle: NodeHandle) => Promise<Picture>;\n  stopRecordingAsync: (cameraViewNodeHandle: NodeHandle) => Promise<void>;\n\n  // Configuration\n  getAvailablePictureSizesAsync: (ratio: string, cameraViewNodeHandle: NodeHandle) => Promise<string[]>;\n  getAvailableRatiosAsync: (cameraViewNodeHandle: NodeHandle) => Promise<string[]>;\n\n  addListener: (eventName: string) => void;\n  removeListeners: (count: number) => void;\n} = NativeModulesProxy.ExpoCamera2ViewManager as any;\n\nexport default ExpoCamera2NativeViewManager;\n"]}